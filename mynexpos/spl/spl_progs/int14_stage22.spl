[PAGE_TABLE_BASE + 3]=[PAGE_TABLE_BASE + 3]+1;
alias functionNo R1;
functionNo= [[PTBR + 2*(SP-5)/512]*512 + (SP-5)%512];

[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13] = SP;
SP = [PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 -1;



//SemLock System Call
if( functionNo == 19 ) then
	[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 19;
	
	alias id R3;
	SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13];
	id=[[PTBR + 2*(SP-4)/512]*512 + (SP-4)%512];
	
	if ( [[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 + 496 + 2*id] != 1 || id < 0 || id > 7  ) then
			[[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512]=-1;
			[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 0;

			ireturn;
	endif;
	
	SP = [PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 -1;
	alias semaphore_table_id R4;
	
	semaphore_table_id=[[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 + 496 + 2*id + 1];
	while( [SEMAPHORE_TABLE + semaphore_table_id*4] != -1 ) do
		[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +4]=WAIT_SEMAPHORE;
		[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +5]=semaphore_table_id;
		backup;
		call MOD_5;
		restore;
	endwhile;
	
	
	[SEMAPHORE_TABLE + semaphore_table_id*4] = [SYSTEM_STATUS_TABLE +1];
	SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13];
	[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 0;
	[[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512]=0;
	ireturn;
endif;


//SemUnLock System Call
if( functionNo == 20 ) then
	[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 20;

	
	alias id R3;
	SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13];
	id=[[PTBR + 2*(SP-4)/512]*512 + (SP-4)%512];
	
	if ( [[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 + 496 + 2*id] != 1 || id < 0 || id > 7  ) then
			[[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512]=-1;
			[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 0;	

			ireturn;
	endif;
	

	SP = [PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 -1;
	alias semaphore_table_id R5;
	
	semaphore_table_id=[[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +11]*512 + 496 + 2*id + 1];
	if ( [SEMAPHORE_TABLE + 4*semaphore_table_id] != -1 ) then
		if ( [SEMAPHORE_TABLE + 4*semaphore_table_id] != [SYSTEM_STATUS_TABLE + 1]) then 
			SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13];
			[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 0;
			[[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512]=-2;	

			ireturn;
		endif;
		[SEMAPHORE_TABLE + 4*semaphore_table_id] = -1;
		id =0;
		while ( id < 16 ) do
			if( [PROCESS_TABLE + id*16 + 5] == semaphore_table_id && [PROCESS_TABLE + id*16 + 4] == WAIT_SEMAPHORE )  then
				[PROCESS_TABLE + id*16 + 4]=READY;
			endif;
		id=id+1;
		endwhile;
							
	endif;	 


	
	SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +13];
	[PROCESS_TABLE +[SYSTEM_STATUS_TABLE + 1]*16 +9] = 0;
	[[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512]=0;	

	ireturn;
endif;










 
